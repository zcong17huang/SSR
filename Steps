Linux 使用SSR客户端
下载安装SSR
下载项目文件
sudo apt-get install git  
git clone https://github.com/ssrbackup/shadowsocksr

配置config.json

进入clone的文件夹，复制config.json到 /etc/shadowsocks.json
cp shadowsocksr/config.json /etc/shadowsocks.json

编辑json
vi /etc/shadowsocks.josn

你会看到如下信息：

{
    "server": "0.0.0.0",
    "server_ipv6": "::",
    "server_port": 8388,
    "local_address": "127.0.0.1",
    "local_port": 1080,
    "password": "m",
    "method": "aes-128-ctr",
    "protocol": "auth_aes128_md5",
    "protocol_param": "",
    "obfs": "tls1.2_ticket_auth_compatible",
    "obfs_param": "",
    "speed_limit_per_con": 0,
    "speed_limit_per_user": 0,
    "additional_ports" : {}, // only works under multi-user mode
    "additional_ports_only" : false, // only works under multi-user mode
    "timeout": 120,
    "udp_timeout": 60,
    "dns_ipv6": false,
    "connect_verbose_info": 0,
    "redirect": "",
    "fast_open": false
}

修改信息，主要是：
"server_port":8388,        //端口
"password":"password",     //密码
 "protocol":"origin",       //协议插件
 "obfs":"http_simple",      //混淆插件
 "method":"aes-256-cfb",    //加密方式 
 
运行ssr

进入到shadowsocksr/shadowsocks目录，运行
python local.py -c/etc/shadowsocks.json -d start

停止ssr

进入到shadowsocksr/shadowsocks目录，运行
python local.py -c/etc/shadowsocks.json -d stop

重启

python local.py -c/etc/shadowsocks.json -d restart


利用proxychains让命令走代理

安装proxychains
sudo apt install proxychains

配置proxychains
sudo vim /etc/proxychains.conf

将最后一行改成：
socks5 127.0.0.1 1080

proxychains使用

proxychains wget https://www.google.com
PS：好像这个ip和前面ssr的json设置的ip有关

* 让命令行都走代理（如果需要的话）
proxychains bash

配置chrome浏览器
因为某些原因（我不是很清楚），在大多数Linux下只成功启动ssr客户端的话会发现并没有什么作用，该进不去的仍然进不去，在这里就直接讲在Chrome内自动代理（国内走直连，特定网站走ssr）的解决方案吧。

进入https://file.lucien.ink/SwitchyOmega，下载
SwitchyOmega.crx
OmegaOptions.bak

 然后在Chrome里打开chrome://extensions，把SwitchyOmega.crx文件拖放到扩展程序页面，点击添加扩展程序进行安装。
 打开SwitchyOmega的设置页面，跳过设置向导，点击导入/导出、从备份文件恢复、找到OmegaOptions.bak打开，恢复完成后点击应用选项,可以点击扩展设置选择直连、代理还是自动切换。
